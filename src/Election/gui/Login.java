/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Election.gui;

import Election.distributed.gui.VotingGUI;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import Election.wallet.User;
import com.formdev.flatlaf.FlatDarculaLaf;
import java.io.IOException;
import java.util.Arrays;
import javax.swing.JFileChooser;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author IPT
 */
public class Login extends javax.swing.JFrame {
    
    /**
     * Creates new form Register
     */
    public Login() {
        
        try {
            UIManager.setLookAndFeel(new FlatDarculaLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Administration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        initComponents();
        this.setLocationRelativeTo(null);
        createUsersDirectory();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        btAdministracao = new javax.swing.JButton();
        btLogin1 = new javax.swing.JButton();
        btRegister1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(336, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btAdministracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Election/multimedia/login.png"))); // NOI18N
        btAdministracao.setText("Administração");
        btAdministracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdministracaoActionPerformed(evt);
            }
        });
        jPanel1.add(btAdministracao, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 190, 80));

        btLogin1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Election/multimedia/login.png"))); // NOI18N
        btLogin1.setText("Login");
        btLogin1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLogin1ActionPerformed(evt);
            }
        });
        jPanel1.add(btLogin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 190, 80));

        btRegister1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Election/multimedia/login.png"))); // NOI18N
        btRegister1.setText("Registo");
        btRegister1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRegister1ActionPerformed(evt);
            }
        });
        jPanel1.add(btRegister1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 190, 190, 80));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 340, 500));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static void createUsersDirectory() {
        String currentDirectoryPath = System.getProperty("user.dir");
        String usersDirectoryPath = currentDirectoryPath + File.separator + "users";

        File usersDirectory = new File(usersDirectoryPath);

        if (!usersDirectory.exists()) {
            usersDirectory.mkdirs();
        }
    }

     private void handleCreateUser() {
        JTextField nameField = new JTextField();
        JPasswordField passwordField1 = new JPasswordField();
        JPasswordField passwordField2 = new JPasswordField();

        int result = JOptionPane.showConfirmDialog(
                this,
                new Object[]{"Name:", nameField, "Password:", passwordField1, "Confirm Password:", passwordField2},
                "Create User",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE
        );

        if (result == JOptionPane.OK_OPTION) {
            String name = nameField.getText();
            String pw1 = new String(passwordField1.getPassword());
            String pw2 = new String(passwordField2.getPassword());

            if (!name.isBlank() && pw1.equals(pw2) && !pw1.isBlank()) {
                //Criar o user
                User u;
                try {
                    u = new User(name);
                    u.save(pw1);
                } catch (Exception ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                if(name.isBlank()){
                    JOptionPane.showMessageDialog(this, "Input invvalido. Por favor verifique o nome.");
                }else if(!pw1.equals(pw2)){
                    JOptionPane.showMessageDialog(this, "Input invvalido. Por favor verifique as passwords.");

                }else if(pw1.isBlank() || pw2.isBlank()){
                    JOptionPane.showMessageDialog(this, "Input invvalido. Passwords não podem ser vazias.");
                }else{
                    JOptionPane.showMessageDialog(this, "Input invvalido. Por favor verifique os dados.");
                }
            }
        }
    }
    
    
    private void btAdministracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdministracaoActionPerformed
        // TODO add your handling code here:
        User user = handleLogin();
        this.setVisible(false);
        new Administration(user).setVisible(true);
    }//GEN-LAST:event_btAdministracaoActionPerformed

    private User handleLogin() {
        //Criar um FileChooser para a Priv Key
        JFileChooser fileChooser = new JFileChooser();
        
        //Obter o diretorio atual
        String usersDirectory = System.getProperty("user.dir") + "/users";
        fileChooser.setCurrentDirectory(new File(usersDirectory));
        
        //Inicializar a escolha de ficheiro no diretorio atual
        int result = fileChooser.showOpenDialog(this);
        
        //O sistema só reaje se for escolhido um ficheiro
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            
            String pw = askForPassword(selectedFile);
            User user = null;
            try {
                user = User.loadUser(selectedFile.getPath(),pw);
            } catch (IOException ex) {
                return null;
                //Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                return null;
            }
            
            return user;
            
            
        }
        return null;
    }

    private void handleAdministracao() {
        //Criar um FileChooser para a Priv Key
        JFileChooser fileChooser = new JFileChooser();
        
        //Obter o diretorio atual
        String usersDirectory = System.getProperty("user.dir") + "/users";
        fileChooser.setCurrentDirectory(new File(usersDirectory));
        
        //Inicializar a escolha de ficheiro no diretorio atual
        int result = fileChooser.showOpenDialog(this);
        
        //O sistema só reaje se for escolhido um ficheiro
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            
            String pw = askForPassword(selectedFile);
            User user;
            try {
                user = User.loadUser(selectedFile.getPath(),pw);
                System.out.println("Able to decode file!");
                this.setVisible(false);
                new Voting(user).setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    
    private String askForPassword(File selectedFile) {
        JPasswordField passwordField = new JPasswordField();
        int result = JOptionPane.showConfirmDialog(this, passwordField, "Enter Password",
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (result == JOptionPane.OK_OPTION) {
            char[] passwordChars = passwordField.getPassword();
            String password = new String(passwordChars);

            // Aqui você pode realizar as operações necessárias com o arquivo e senha
            System.out.println("Selected File: " + selectedFile.getAbsolutePath());
            System.out.println("Password: " + password);
            return password;
        }
        return "";
    }
        
    private void btLogin1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLogin1ActionPerformed
        // TODO add your handling code here:
        User user = handleLogin();
        if (!(user == null)){
            this.setVisible(false);
            new VotingGUI(user).setVisible(true);
        }else{
            JOptionPane.showMessageDialog(null, "Senha ou chave privada inválida. Tente novamente.");
        }
        
    }//GEN-LAST:event_btLogin1ActionPerformed

    private void btRegister1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRegister1ActionPerformed
        // TODO add your handling code here:
        handleCreateUser();
    }//GEN-LAST:event_btRegister1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdministracao;
    private javax.swing.JButton btLogin1;
    private javax.swing.JButton btRegister1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
